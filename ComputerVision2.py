# -*- coding: utf-8 -*-
"""detect_signs_carla.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1URpQy3yqoJIAMR3c1UlMwDWxLVF3jjTQ
"""

import math
from datetime import datetime

import cv2
from ultralytics import YOLO
import numpy as np
import carla


class ComputerVision2:
    def __init__(self, vehicle):
        self.delta_v = None
        self.result_boxes = []
        self.image = None
        self.object_points = None
        self.vehicle = vehicle
        self.inverse_camera_matrix = None
        self.radar_points = None
        self.model = YOLO('sign_best.pt')
        self.signs_classes = ['Green Light', 'Red Light', 'Speed Limit 10', 'Speed Limit 100', 'Speed Limit 110', 'Speed Limit 120', 'Speed Limit 20', 'Speed Limit 30', 'Speed Limit 40', 'Speed Limit 50', 'Speed Limit 60', 'Speed Limit 70', 'Speed Limit 80', 'Speed Limit 90', 'Stop']


        self.camera_x_pixels = 720
        self.camera_y_pixels = 1280
        self.n_points = 50
        self.max_depth = 100
        self.max_speed = 120 / 3.6
        self.max_distance_following_vehicle = 500
        self.following_vehicle_cords = None
        self.distance = None
        self.steer_vector_endpoint = None


        def set_resolution(self, x, y):
            self.camera_x_pixels = x
            self.camera_y_pixels = y

    def process_data(self):
        # Start by detecting objects in the image
        #if self.image is None or self.radar_points is None:
            #return
        results = self.model.predict(source=self.image, save=False)
        result = results[0]


    for box in result.boxes:
            class_id = result.names[box.cls[0].item()]
            cords = box.xyxy[0].tolist()
            cords = [round(x) for x in cords]
            conf = round(box.conf[0].item(), 2)
            print("Object type:", class_id)
            print("Coordinates:", cords)
            print("Probability:", conf)
            print("---")
            if str(class_id) in self.vehicle_classes:
                vehicle_boxes.append(cords)