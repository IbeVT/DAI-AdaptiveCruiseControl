# -*- coding: utf-8 -*-
"""YoloV8DatasetTest(1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RL9eVmm-H8FHFXtpTcC4vya4Fr6M4Czy

# Setup

Pip install `ultralytics` and [dependencies](https://github.com/ultralytics/ultralytics/blob/main/requirements.txt) and check software and hardware.
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install ultralytics
# %pip install unzip
import ultralytics
ultralytics.checks()

#from google.colab import drive
#drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
#@title Select YOLOv8 ðŸš€ logger {run: 'auto'}
logger = 'Comet' #@param ['Comet', 'TensorBoard']

if logger == 'Comet':
#   %pip install -q comet_ml
  import comet_ml; comet_ml.init()
elif logger == 'TensorBoard':
#   %load_ext tensorboard
#   %tensorboard --logdir .

"""# 5. Python Usage

YOLOv8 was reimagined using Python-first principles for the most seamless Python YOLO experience yet. YOLOv8 models can be loaded from a trained checkpoint or created from scratch. Then methods are used to train, val, predict, and export the model. See detailed Python usage examples in the [YOLOv8 Python Docs](https://docs.ultralytics.com/usage/python/).
"""

import locale
def getpreferredencoding(do_setlocale = True):
    return "UTF-8"
locale.getpreferredencoding = getpreferredencoding

!git clone https://github.com/DanielHfnr/Carla-Object-Detection-Dataset.git

"""HERE MANUALLY IMPORT THE .yaml FILE"""

!cp  /content/Carla-Object-Detection-Dataset/labels_yolo_format/train/* /content/Carla-Object-Detection-Dataset/images/train

!cp /content/Carla-Object-Detection-Dataset/labels_yolo_format/test/* /content/Carla-Object-Detection-Dataset/images/test

!rm -r /content/Carla-Object-Detection-Dataset/labels
!mkdir /content/Carla-Object-Detection-Dataset/labels
!cp -r /content/Carla-Object-Detection-Dataset/labels_yolo_format/* /content/Carla-Object-Detection-Dataset/labels

!mkdir /content/Carla-Object-Detection-Dataset/images/val
!mkdir /content/Carla-Object-Detection-Dataset/labels/val
!mv /content/Carla-Object-Detection-Dataset/images/train/*5*  /content/Carla-Object-Detection-Dataset/images/val
!mv /content/Carla-Object-Detection-Dataset/labels/train/*5*  /content/Carla-Object-Detection-Dataset/labels/val

"""SKIP TO HERE"""

!unzip  /content/drive/MyDrive/yolov5_carla.zip

from ultralytics import YOLO


# Load a model
#model = YOLO('yolov8n.yaml')  # build a new model from scratch
model = YOLO('yolov8n.pt')  # load a pretrained model (recommended for training)

# Use the model
results = model.train(data='yolov5_carla.yaml',  name = 'CarlaCV', epochs=20, patience=20, batch = 16,
      cache = True, imgsz=640, iou = 0.5,
      augment=False, degrees=0.0, fliplr=0.0, lr0=0.001, optimizer='AdamW')  # train the model

results = model.val()  # evaluate model performance on the validation set

#### results = model.test() TEST CODE

#results = model('https://ultralytics.com/images/bus.jpg')  # predict on an image
#results = model('/content/Carla-Object-Detection-Dataset/Town05_009660.png')  # predict on an image

results = model.export(format='onnx')  # export the model to ONNX format